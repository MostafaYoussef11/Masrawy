/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gold.account;

import DataBase.ConectionDataBase;
import DataBase.Tools;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.text.DateFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mosta
 */
public class cirky extends javax.swing.JFrame {

    /**
     * Creates new form cirky
     */
    public cirky() {
        initComponents();
        
    }
    private void SetNew(){
       
        panalTab.setSelectedIndex(1);
        tab2.setEnabled(true); 
        panalTab.setEnabledAt(0, false);
        String[] CouluName = new String [] {"الترحيل", "نهاية", "بداية", "المعدة", "مسلسل"};
        String sql = "SELECT c.isActive , c.ldate , c.fdate , a.name_account , c.id_cirky  FROM cirky c INNER JOIN account a ON a.id_account = c.id_account ;";
        ConectionDataBase.fillAndCenterTable(sql, cirky_table, CouluName);
        txtid.setText(ConectionDataBase.AutoId("cirky", "id_cirky"));
        fdate.setDate(null);
        ldate.setDate(null);
        ConectionDataBase.NewfillCombo("account WHERE id_type = 3 OR id_type = 9 ", "name_account", comAccount);
        bDel.setEnabled(false);
        bNew.setEnabled(true);
        bnewOne.setEnabled(false);
        btnDel.setEnabled(false);
        btnEdit.setEnabled(false);
        btnSave.setEnabled(true);
        btnNew.setEnabled(false);
        btnUpdate.setEnabled(false);
        comAccount.setEnabled(true);
        fdate.setEnabled(true);
        ldate.setEnabled(true);
        txtTotal.setText("");
        table.setEnabled(true);
        btNavitor.setEnabled(false);
        getIsActive();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtid = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fdate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        ldate = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        comAccount = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        panalTab = new javax.swing.JTabbedPane();
        tab1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        tab2 = new javax.swing.JScrollPane();
        cirky_table = new javax.swing.JTable();
        bNew = new javax.swing.JButton();
        bnewOne = new javax.swing.JButton();
        bDel = new javax.swing.JButton();
        btNavitor = new javax.swing.JButton();
        isActive = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtid.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("رقم");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("من");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        fdate.setDateFormatString("dd-MM-yyyy");
        fdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fdateKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fdateKeyReleased(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("الي");
        jLabel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ldate.setDateFormatString("dd-MM-yyyy");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("المعدة");
        jLabel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        comAccount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ldate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fdate, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(comAccount, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ldate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-file.png"))); // NOI18N
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/diskette (1).png"))); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pencil (1).png"))); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exchange.png"))); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/exit.png"))); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("الاجمالي");

        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "عدد الساعات", "التاريخ", "اليوم", "مسلسل"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tableKeyTyped(evt);
            }
        });
        tab1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setPreferredWidth(100);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setPreferredWidth(100);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        panalTab.addTab("الساعات", new javax.swing.ImageIcon(getClass().getResource("/icons/hours.png")), tab1); // NOI18N

        cirky_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "الترحيل", "نهاية", "بداية", "المعدة", "مسلسل"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cirky_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cirky_tableMouseClicked(evt);
            }
        });
        tab2.setViewportView(cirky_table);

        panalTab.addTab("السركي", new javax.swing.ImageIcon(getClass().getResource("/icons/availability.png")), tab2); // NOI18N

        bNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add-file.png"))); // NOI18N
        bNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bNewActionPerformed(evt);
            }
        });

        bnewOne.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/plus.png"))); // NOI18N
        bnewOne.setEnabled(false);
        bnewOne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnewOneActionPerformed(evt);
            }
        });

        bDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        bDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDelActionPerformed(evt);
            }
        });

        btNavitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/navigation.png"))); // NOI18N
        btNavitor.setText("ترحيل التجديدة");
        btNavitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNavitorActionPerformed(evt);
            }
        });

        isActive.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(isActive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNavitor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bDel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bnewOne)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bNew))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panalTab)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panalTab, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bnewOne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btNavitor))
                    .addComponent(isActive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        SetNew();
    }//GEN-LAST:event_formWindowOpened
       Vector v = new Vector();

    private void fdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fdateKeyReleased

    }//GEN-LAST:event_fdateKeyReleased
    private void getIsActive(){
       String isActiveStr = ConectionDataBase.getSum("select isActive as sum from cirky where id_cirky = "+txtid.getText());
       isActive.setText(isActiveStr);
    }
    private void fdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fdateKeyPressed
        // TODO add your handling code here:

       
    }//GEN-LAST:event_fdateKeyPressed

    private void bNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bNewActionPerformed
        // TODO add your handling code here:
    if(fdate.getDate() == null){
          Tools.MasgBox("اختر التاريخ");
    }
    else{
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
         try {
            Date Fdate = fdate.getDate();
            Calendar c = Calendar.getInstance();
            c.setTime(Fdate);
            c.add(Calendar.DATE, 15);

            String Ldate = sdf.format(c.getTime());
            ldate.setDate(sdf.parse(Ldate));
        }
        catch (ParseException ex) {
                Logger.getLogger(cirky.class.getName()).log(Level.SEVERE, null, ex);
            }
            DefaultTableModel modle = (DefaultTableModel) table.getModel();
            String[] colouName = new String [] {"عدد الساعات", "التاريخ", "اليوم", "مسلسل"};
            modle.setRowCount(0);
            String id_hour = ConectionDataBase.AutoId("hours", "id_hours");
            int idhour = Integer.parseInt(id_hour);
            //SimpleDateFormat nameday = new SimpleDateFormat("EEEE",Locale.ENGLISH);
            DateFormatSymbols dfs = new DateFormatSymbols(new Locale("ar"));
            String[] dayNames = dfs.getWeekdays();
            for(int i =0 ; i < 15 ; i++){
                v = new Vector(4);
                Calendar cr = Calendar.getInstance();
                cr.setTime(fdate.getDate());
                cr.add(Calendar.DATE, i);
                for(int r = 0 ; r < 4 ; r++){
                   v.add(""); 
                   v.add(sdf.format(cr.getTime()));
                   v.add(dayNames[cr.get(Calendar.DAY_OF_WEEK)]);
                   v.add(idhour+i);
                }
                modle.addRow(v);
            }
            Tools.CenterTable(colouName, table);
            bNew.setEnabled(false);
            bnewOne.setEnabled(true);
            panalTab.setEnabledAt(0, true);
            panalTab.setEnabledAt(1, false);
            panalTab.setSelectedIndex(0);
    }
    }//GEN-LAST:event_bNewActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        SetNew();
      
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String id_srky2 = ConectionDataBase.AutoId("cirky", "id_cirky");
        int id_1 = Integer.parseInt(txtid.getText());
        int id_2 = Integer.parseInt(id_srky2);
        int rowCount = table.getRowCount();
        if(rowCount == 0){
           Tools.ErorBox("لا توجد ساعات !!!");
        }
        else{
            if(id_1 == id_2){
               // insert in table cirky
               String sql_insert_hour , id_hour , name_day , date_day = null,count_hour , notes ;
               SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
               SimpleDateFormat sdf2 = new SimpleDateFormat("dd-MM-yyyy");
               String id_account = ConectionDataBase.getIdFrmName("account", comAccount.getSelectedItem().toString());
               String first_date = sdf.format(fdate.getDate());
               String last_date = sdf.format(ldate.getDate());
               String sql_Insert_Cirky = "INSERT INTO cirky VALUES("+id_1+","+id_account+",'"+first_date+"','"+last_date+"',0);";
               boolean is_saved = ConectionDataBase.ExecuteAnyQuery(sql_Insert_Cirky);
               if(is_saved){
                   //insert in hours
                   int sum_Hour = 0;
                   for(int i = 0 ; i < rowCount ; i++){
                       id_hour = table.getValueAt(i, 3).toString();
                       name_day = table.getValueAt(i, 2).toString();
                       String fdate_day = table .getValueAt(i, 1).toString();
                       try {
                           date_day = sdf.format(sdf2.parse(fdate_day));
                       } catch (ParseException ex) {
                           Logger.getLogger(cirky.class.getName()).log(Level.SEVERE, null, ex);
                       }
                       count_hour = table.getValueAt(i, 0).toString();
                       if(count_hour == null || count_hour.equals("")){
                           count_hour = "0";
                           
                       }
                       sum_Hour += Integer.parseInt(count_hour);
                       if(sum_Hour >= 120){
                             checkheavy();
                          
                       }
                       
                       notes = "اجمالي الساعات هو "+ sum_Hour;
                       sql_insert_hour = "INSERT INTO hours VALUES("+id_hour+",'"+name_day+"','"+date_day+"',"+count_hour+",'"+notes+"',"+id_1+");";
                       ConectionDataBase.ExecuteAnyQuery(sql_insert_hour);
                       if(i == rowCount-1){
                           Tools.MasgBox("تم الحفظ و اجمالي الساعات هو "+sum_Hour);
                       }
                   }
                   
               }
               
            }        
        
        }
        SetNew();

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(isActive.getText().equals("تم الترحيل")){
            Tools.ErorBox("لايمكن التعديل علي سركي مرحل ");
        }else{
            panalTab.setEnabledAt(0, true);
            table.setEnabled(true);
            fdate.setEnabled(false);
            ldate.setEnabled(true);
            txtTotal.setEnabled(true);

            bnewOne.setEnabled(true);
            bDel.setEnabled(true);

            btnUpdate.setEnabled(true);
            btnNew.setEnabled(true);
            btnEdit.setEnabled(false);
            btnDel.setEnabled(false);
        }
        

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
       if(isActive.getText().equals("تم الترحيل")){
            Tools.ErorBox("لايمكن حذف  ");
        }else{

          String id_cirky = txtid.getText();
          // DEL all HOURS
          int isOk = JOptionPane.showConfirmDialog(null, "هل ترعب في حذف كل الساعات ؟","حذف الكل " ,JOptionPane.YES_NO_OPTION , JOptionPane.ERROR_MESSAGE);
          if(isOk == JOptionPane.OK_OPTION){
              String Sql_del_hour = "DELETE FROM hours WHERE id_cirky = "+id_cirky +";";
              boolean is_del = ConectionDataBase.ExecuteAnyQuery(Sql_del_hour);
              if(is_del){
                  String sql_Delete_Cirky ="DELETE FROM cirky WHERE id_cirky = "+id_cirky +";";
                  if(ConectionDataBase.ExecuteAnyQuery(sql_Delete_Cirky)){
                       Tools.MasgBox("تم الحذف");
                  }
              }
              SetNew();
          } 
       
       
       }
        

    }//GEN-LAST:event_btnDelActionPerformed
    
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnExitActionPerformed

    private void tableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyTyped
        char c = evt.getKeyChar();
        if(!((c >= '0') && (c <= '9') || (c == KeyEvent.VK_ENTER))){
            getToolkit().beep();
            evt.consume();
        }

    }//GEN-LAST:event_tableKeyTyped

    private void tableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableKeyReleased
        // TODO add your handling code here:
        String S_total = txtTotal.getText();
        int total = 0;
        int row = table.getRowCount();
        //int hour = 0;
        if(! (S_total == null)){
            for(int i = 0 ; i < row ; i++){
                String S_hour = table.getValueAt(i, 0).toString();
                int hour = 0;
                if(!(S_hour.equals(""))){
                    hour = Integer.parseInt(S_hour); 
                    if(hour >= 24){
                        Tools.ErorBox("خطأ في الوقت");
                        getToolkit().beep();
                        hour = 0 ;
                        table.setValueAt("", i, 0);
                    }
                   
                }
                total += hour;
            }
            txtTotal.setText(total + "");
            if(total >= 120){
                new notifiction("انتهاء التجديدة").setVisible(true);
                checkheavy();
                //
            
            }
        }
    }//GEN-LAST:event_tableKeyReleased

    private void cirky_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cirky_tableMouseClicked
        // TODO add your handling code here:
        int row = cirky_table.getSelectedRow();
        String id = cirky_table.getValueAt(row, 4).toString();
        txtid.setText(id);
        getIsActive();
        comAccount.setSelectedItem(cirky_table.getValueAt(row, 3));
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date f_date = sdf.parse(cirky_table.getValueAt(row, 2).toString());
            Date L_date = sdf.parse(cirky_table.getValueAt(row, 1).toString());
            fdate.setDate(f_date);
            ldate.setDate(L_date);
        } catch (ParseException ex) {
            Logger.getLogger(cirky.class.getName()).log(Level.SEVERE, null, ex);
        }
        String activetion = cirky_table.getValueAt(row, 0).toString();
        
        
        // Disable Edit txt
        comAccount.setEnabled(false);
        fdate.setEnabled(false);
        ldate.setEnabled(false);
        table.setEnabled(false);
        btnNew.setEnabled(true);
        btnSave.setEnabled(false);
        btnEdit.setEnabled(true);
        btnDel.setEnabled(true);
        btnUpdate.setEnabled(false);
        bNew.setEnabled(false);
        btnDel.setEnabled(true);
        bnewOne.setEnabled(false);
        panalTab.setEnabledAt(0, true);
        panalTab.setEnabledAt(1, false);
        panalTab.setSelectedIndex(0);
        SetHoursTable(id);
        txtTotal.setEditable(false);
    }//GEN-LAST:event_cirky_tableMouseClicked
    private void SetHoursTable(String id){
        String sql = "SELECT num_hour , date_day , name_day , id_hours FROM hours WHERE id_cirky ="+id+";";
        String[] colunmNames = new String [] { "عدد الساعات", "التاريخ", "اليوم", "مسلسل"} ;
        ConectionDataBase.fillAndCenterTable(sql, table, colunmNames);
        String sumHours = ConectionDataBase.getSum("SELECT SUM(num_hour) AS sum FROM hours WHERE id_cirky ="+id+";");
        txtTotal.setText(sumHours);
        int total = Integer.parseInt(sumHours);
        if(total >= 120){
            checkheavy();
           
        }
    }
    private void checkheavy(){
         if(isActive.getText().equals("0.00")){
                isActive.setText("غير مرحل");
                btNavitor.setEnabled(true);
           }else{
                isActive.setText("تم الترحيل");
                btNavitor.setEnabled(false);
         }
    }
    private void bnewOneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnewOneActionPerformed
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
        DateFormatSymbols dfs = new DateFormatSymbols(new Locale("ar"));
        String[] dayNames = dfs.getWeekdays();
        Calendar cr = Calendar.getInstance();
        int row = table.getRowCount() -1;
        String ldt = table.getValueAt(row, 1).toString();
        try {
            Date ldaDate = sdf.parse(ldt);
            cr.setTime(ldaDate);
            cr.add(Calendar.DATE, 1);

        } catch (ParseException ex) {
            Logger.getLogger(cirky.class.getName()).log(Level.SEVERE, null, ex);
        }
        int idhour = Integer.parseInt(table.getValueAt(row, 3).toString());
        v = new Vector(4);
        v.add("");
        v.add(sdf.format(cr.getTime()));
        v.add(dayNames[cr.get(Calendar.DAY_OF_WEEK)]);
        v.add(idhour+1);
        DefaultTableModel modle = (DefaultTableModel)table.getModel();
        modle.addRow(v);
        table.setModel(modle);
        ldate.setDate(cr.getTime());

    }//GEN-LAST:event_bnewOneActionPerformed

    private void bDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDelActionPerformed
        // TODO add your handling code here:
        String id = txtid.getText();
        int row = table.getSelectedRow();
        String id_hour = table.getValueAt(row, 3).toString();
        if(id_hour.equals("")){
                Tools.ErorBox("الرجاء تحديد اليوم");
        }
        else{
            int is_ok =  JOptionPane.showConfirmDialog(null, "هل ترغب في حذف تاريخ "+table.getValueAt(row, 1).toString() , "حذف يوم ", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
            if(is_ok == JOptionPane.OK_OPTION){
                String sqlDelHour = "DELETE FROM hours WHERE id_hours ="+id_hour+";";
                boolean isDelete = ConectionDataBase.ExecuteAnyQuery(sqlDelHour);
                if(isDelete){
                    Tools.MasgBox("تم الحذف ");
                    SetHoursTable(id);
                }
            }
        }
    }//GEN-LAST:event_bDelActionPerformed
    
    private void btNavitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNavitorActionPerformed
          
           String idCirky = ConectionDataBase.getSum("SELECT MAX(id_cirky) AS sum FROM creditors ;");
           Tools.MasgBox(idCirky);
           HeavyEquipment he = new HeavyEquipment(comAccount.getSelectedItem().toString() , txtid.getText());
           Tools.OpenFrame(he, "ترحيل التجديدة", "navigation");
           dispose();
    }//GEN-LAST:event_btNavitorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cirky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cirky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cirky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cirky.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cirky().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDel;
    private javax.swing.JButton bNew;
    private javax.swing.JButton bnewOne;
    private javax.swing.JButton btNavitor;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable cirky_table;
    private javax.swing.JComboBox<String> comAccount;
    private com.toedter.calendar.JDateChooser fdate;
    private javax.swing.JLabel isActive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private com.toedter.calendar.JDateChooser ldate;
    private javax.swing.JTabbedPane panalTab;
    private javax.swing.JScrollPane tab1;
    private javax.swing.JScrollPane tab2;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JLabel txtid;
    // End of variables declaration//GEN-END:variables

}
